services:
  # API Service
  api:
    build:
      context: ../harmanagelApi2/aspnet-core
      dockerfile: ./Dockerfile
    ports:
      - "${API_PORT_HTTPS}:443"
    depends_on:
      - postgres
      - elasticsearch
      - kafka
    environment:
      - ConnectionStrings__Default=${API_DB_CONNECTION}
      - Elasticsearch__Url=${ELASTICSEARCH_URL}
      - Kafka__BootstrapServers=${KAFKA_BOOTSTRAP_SERVERS}
      - AuthServer__Authority=https://localhost:${API_PORT_HTTPS}
      - AuthServer__RequireHttpsMetadata=true
      - ASPNETCORE_Kestrel__Certificates__Default__Password=2576076Sa
      - ASPNETCORE_Kestrel__Certificates__Default__Path=authserver.pfx
      - OpenIddict__Applications__HarmanaGel_Swagger__RootUrl=https://localhost:${API_PORT_HTTPS}
    volumes:
      - aspnet_data_protection:/root/.aspnet/DataProtection-Keys
    networks:
      - harmanagel-network

  # Angular UI Service
  ui:
    build:
      context: ../harmanagelUI
      dockerfile: Dockerfile
    ports:
      - "${UI_PORT}:80"
    depends_on:
      - api
    networks:
      - harmanagel-network

  # PostgreSQL
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - harmanagel-network

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTICSEARCH_VERSION}
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=${ES_JAVA_OPTS}"
    ports:
      - "${ELASTICSEARCH_PORT}:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - harmanagel-network

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:${KIBANA_VERSION}
    ports:
      - "${KIBANA_PORT}:5601"
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: ${ELASTICSEARCH_URL}
    networks:
      - harmanagel-network

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
    ports:
      - "${ZOOKEEPER_CLIENT_PORT}:2181"
    networks:
      - harmanagel-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_PORT}:9092"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_CLIENT_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:${KAFKA_INTERNAL_PORT},PLAINTEXT_HOST://localhost:${KAFKA_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_REPLICATION_FACTOR}
    networks:
      - harmanagel-network

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "${KAFKA_UI_PORT}:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:${KAFKA_PORT}
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:${ZOOKEEPER_CLIENT_PORT}
    depends_on:
      - kafka
      - zookeeper
    networks:
      - harmanagel-network
  
  migrator:
    build:
      context: ../harmanagelApi2/aspnet-core
      dockerfile: src/HarmanaGel.DbMigrator/Dockerfile
    depends_on:
      - postgres
    environment:
      - ConnectionStrings__Default=${API_DB_CONNECTION}
    networks:
      - harmanagel-network

volumes:
  postgres_data:
  elasticsearch_data:
  aspnet_data_protection:

networks:
  harmanagel-network:
    driver: bridge
